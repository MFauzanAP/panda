{
  "content": "import type { ConditionalValue, Conditions, Nested } from './conditions'\r\nimport type { PropertiesFallback } from './csstype'\r\nimport type { SystemProperties, CssVarProperties } from './style-props'\r\n\r\ntype String = string & {}\r\ntype Number = number & {}\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Native css properties\r\n * -----------------------------------------------------------------------------*/\r\n\r\nexport type CssProperty = keyof PropertiesFallback\r\n\r\nexport interface CssProperties extends PropertiesFallback<String | Number>, CssVarProperties {}\r\n\r\nexport interface CssKeyframes {\r\n  [name: string]: {\r\n    [time: string]: CssProperties\r\n  }\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Conditional css properties\r\n * -----------------------------------------------------------------------------*/\r\n\r\ntype MinimalNested<P> = {\r\n  [K in keyof Conditions]?: Nested<P>\r\n}\r\n\r\ninterface GenericProperties {\r\n  [key: string]: ConditionalValue<String | Number | boolean>\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Native css props\r\n * -----------------------------------------------------------------------------*/\r\n\r\nexport type NestedCssProperties = Nested<CssProperties>\r\n\r\nexport type SystemStyleObject = Nested<SystemProperties & CssVarProperties>\r\n\r\nexport interface GlobalStyleObject {\r\n  [selector: string]: SystemStyleObject\r\n}\r\nexport interface ExtendableGlobalStyleObject {\r\n  [selector: string]: SystemStyleObject | undefined\r\n  extend?: GlobalStyleObject | undefined\r\n}\r\n\r\nexport type CompositionStyleObject<Property extends string> = Nested<{\r\n  [K in Property]?: K extends keyof SystemStyleObject ? SystemStyleObject[K] : unknown\r\n}>\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Jsx style props\r\n * -----------------------------------------------------------------------------*/\r\ninterface WithCss {\r\n  css?: SystemStyleObject\r\n}\r\ntype StyleProps = SystemProperties & MinimalNested<SystemStyleObject>\r\n\r\nexport type JsxStyleProps = StyleProps & WithCss\r\n\r\nexport type DistributiveOmit<T, K extends keyof any> = T extends unknown ? Omit<T, K> : never\r\n\r\nexport type Assign<T, U> = {\r\n  [K in keyof T]: K extends keyof U ? U[K] : T[K]\r\n} & U\r\n\r\nexport interface PatchedHTMLProps {\r\n  htmlWidth?: string | number\r\n  htmlHeight?: string | number\r\n  htmlTranslate?: 'yes' | 'no' | undefined\r\n  htmlContent?: string\r\n}\r\n\r\nexport type OmittedHTMLProps = 'color' | 'translate' | 'transition' | 'width' | 'height' | 'content'\r\n\r\ntype WithHTMLProps<T> = DistributiveOmit<T, OmittedHTMLProps> & PatchedHTMLProps\r\n\r\nexport type JsxHTMLProps<T extends Record<string, any>, P extends Record<string, any> = {}> = Assign<\r\n  WithHTMLProps<T>,\r\n  P\r\n>\r\n"
}