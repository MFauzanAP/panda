{
  "content": "import type { CompositionStyleObject } from './system-types'\r\n\r\ninterface Recursive<T> {\r\n  [key: string]: Recursive<T> | T\r\n}\r\n\r\nexport interface Token<Value = any> {\r\n  value: Value\r\n  description?: string\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Text styles\r\n * -----------------------------------------------------------------------------*/\r\n\r\ntype TextStyleProperty =\r\n  | 'fontSize'\r\n  | 'fontSizeAdjust'\r\n  | 'fontVariationSettings'\r\n  | 'fontVariantPosition'\r\n  | 'fontVariantCaps'\r\n  | 'fontVariantNumeric'\r\n  | 'fontVariantAlternates'\r\n  | 'fontVariantLigatures'\r\n  | 'fontFamily'\r\n  | 'fontWeight'\r\n  | 'fontSynthesis'\r\n  | 'fontStyle'\r\n  | 'fontVariant'\r\n  | 'lineHeight'\r\n  | 'letterSpacing'\r\n  | 'textDecoration'\r\n  | 'textTransform'\r\n  | 'textIndent'\r\n  | 'textDecorationColor'\r\n  | 'textDecorationLine'\r\n  | 'textDecorationStyle'\r\n  | 'textEmphasisColor'\r\n  | 'textEmphasisPosition'\r\n  | 'textEmphasisStyle'\r\n  | 'hyphenateCharacter'\r\n  | 'textOrientation'\r\n  | 'textOverflow'\r\n  | 'textRendering'\r\n\r\nexport type TextStyle = CompositionStyleObject<TextStyleProperty>\r\n\r\nexport type TextStyles = Recursive<Token<TextStyle>>\r\n\r\n/* -----------------------------------------------------------------------------\r\n * Layer styles\r\n * -----------------------------------------------------------------------------*/\r\n\r\ntype Placement =\r\n  | 'Top'\r\n  | 'Right'\r\n  | 'Bottom'\r\n  | 'Left'\r\n  | 'Inline'\r\n  | 'Block'\r\n  | 'InlineStart'\r\n  | 'InlineEnd'\r\n  | 'BlockStart'\r\n  | 'BlockEnd'\r\n\r\ntype Radius =\r\n  | `Top${'Right' | 'Left'}`\r\n  | `Bottom${'Right' | 'Left'}`\r\n  | `Start${'Start' | 'End'}`\r\n  | `End${'Start' | 'End'}`\r\n\r\ntype LayerStyleProperty =\r\n  | 'background'\r\n  | 'backgroundColor'\r\n  | 'backgroundImage'\r\n  | 'borderRadius'\r\n  | 'border'\r\n  | 'borderWidth'\r\n  | 'borderColor'\r\n  | 'borderStyle'\r\n  | 'boxShadow'\r\n  | 'filter'\r\n  | 'backdropFilter'\r\n  | 'transform'\r\n  | 'color'\r\n  | 'opacity'\r\n  | 'backgroundBlendMode'\r\n  | 'backgroundAttachment'\r\n  | 'backgroundClip'\r\n  | 'backgroundOrigin'\r\n  | 'backgroundPosition'\r\n  | 'backgroundRepeat'\r\n  | 'backgroundSize'\r\n  | `border${Placement}`\r\n  | `border${Placement}Width`\r\n  | 'borderRadius'\r\n  | `border${Radius}Radius`\r\n  | `border${Placement}Color`\r\n  | `border${Placement}Style`\r\n  | 'padding'\r\n  | `padding${Placement}`\r\n\r\nexport type LayerStyle = CompositionStyleObject<LayerStyleProperty>\r\n\r\nexport type LayerStyles = Recursive<Token<LayerStyle>>\r\n\r\nexport interface CompositionStyles {\r\n  textStyles: TextStyles\r\n  layerStyles: LayerStyles\r\n}\r\n"
}